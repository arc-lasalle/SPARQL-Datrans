BASE <http://trans.example.com/>
PREFIX iter: <http://w3id.org/sparql-generate/iter/>
PREFIX fn: <http://w3id.org/sparql-generate/fn/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> 
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
PREFIX simcore: <http://www.opteemal.eu/schema/2017/01/SimModelCore#>
PREFIX simres: <http://www.opteemal.eu/schema/2017/01/ResourcesGeneral#>
PREFIX simbldg: <http://www.opteemal.eu/schema/2017/01/BuildingModel#>
PREFIX inst:  <http://opteemal-project.eu/resource/simmodel#>

# last modification 2019.07.08

# NOT TESTED !!!!!

GENERATE 
{
	GENERATE 
	{
		GENERATE 
		{
			?IfcWallStandardCase_IRI
				rdf:type 								simbldg:SimWall_Wall_Default ;
				simcore:name 							?Name ; 	
				simcore:ifcGlobalID 					?globalId ;				
				simbldg:materialLayerSet 				?IfcMaterialLayerSet_IRI ;				
				simcore:containingSpatialStructure 		?IfcBuildingStorey_IRI ;				
				simcore:objectType 						?ObjectType ; 		
				simcore:refId 							?IfcWallStandardCaseRefId ;
				simcore:isTemplateObject 				"false"^^xsd:boolean ;
				simcore:simModelSubtype 				"Default"^^xsd:string ;		
				simcore:simModelType 					"Wall"^^xsd:string ;
				simcore:simUniqueID 					"not defined" ;
				simcore:sourceModelObjectType 			"IfcWall"^^xsd:string ;
				simcore:sourceModelSchema 				"IFC4" ;
				simcore:tag 							?tag ;
				.
		}
		ITERATOR iter:XPath(?source, "//ifc_uos/IfcRelAssociatesMaterial[RelatedObjects/IfcWallStandardCase[@ref='"+?IfcWallStandardCase_ID+"']]/RelatingMaterial/IfcMaterialLayerSetUsage", "IfcMaterialLayerSetUsage/@ref" ) AS ?IfcMaterialLayerSet ?IfcMaterialLayerSet_REF
		WHERE 
		{
			BIND( IRI( CONCAT( ?base, "IfcMaterialLayerSet_", ?IfcMaterialLayerSet_REF)) AS ?IfcMaterialLayerSet_IRI )	
		}.
	}
	ITERATOR iter:XPath(?source, "//ifc_uos/IfcRelContainedInSpatialStructure[RelatedElements/IfcWallStandardCase[@ref='"+?IfcWallStandardCase_ID+"']]" ) AS ?IfcRelContainedInSpatialStructure
	WHERE
	{
		BIND( fn:XPath(?IfcRelContainedInSpatialStructure,"/IfcRelContainedInSpatialStructure/RelatingStructure/IfcBuildingStorey/@ref" ) AS ?IfcBuildingStorey_REF )
		BIND( IRI( CONCAT( ?base, "IfcBuildingStorey_",?IfcBuildingStorey_REF ) ) AS ?IfcBuildingStorey_IRI )
	}.		
}

SOURCE <http://ex.org/file1> AS ?source
# This name variable is mapped to a file path in a new line that will be 
# included by the program linked to the original file:

ITERATOR iter:XPath(?source, "//ifc_uos/IfcWallStandardCase" ) AS ?IfcWallStandardCase
WHERE 
{
	# 1. Extract base URI:
	BIND (str(inst:) as ?base)

	# 2. Extract element names:
	BIND( fn:XPath(?IfcWallStandardCase,"/IfcWallStandardCase/@id" ) AS ?IfcWallStandardCase_ID )	
	BIND( fn:XPath(?IfcWallStandardCase,"/IfcWallStandardCase/Name/text()") AS ?Name )	
	BIND( fn:XPath(?IfcWallStandardCase,"/IfcWallStandardCase/GlobalId/text()") AS ?globalId )
	BIND( fn:XPath(?IfcWallStandardCase,"/IfcWallStandardCase/ObjectType/text()") AS ?ObjectType )
	BIND( fn:XPath(?IfcWallStandardCase,"/IfcWallStandardCase/Tag/text()") AS ?tag )	
	
	BIND( IRI( CONCAT( ?base, "IfcSlab_", ?IfcWallStandardCase_ID ) ) AS ?IfcWallStandardCase_IRI )
	BIND( (xsd:ID(CONCAT("ID", ?IfcWallStandardCase_ID))) as ?IfcWallStandardCaseRefId ) . 
}