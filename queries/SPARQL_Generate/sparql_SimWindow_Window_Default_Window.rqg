BASE <http://trans.example.com/>
PREFIX iter: <http://w3id.org/sparql-generate/iter/>
PREFIX fn: <http://w3id.org/sparql-generate/fn/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> 
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
PREFIX simcore: <http://www.opteemal.eu/schema/2017/01/SimModelCore#>
PREFIX simres: <http://www.opteemal.eu/schema/2017/01/ResourcesGeneral#>
PREFIX simbldg: <http://www.opteemal.eu/schema/2017/01/BuildingModel#>
PREFIX inst:  <http://opteemal-project.eu/resource/simmodel#>
PREFIX list: <https://w3id.org/list#> 

# last modification 2019.07.08

GENERATE 
{
	?IfcWindow_IRI 
		rdf:type 							simbldg:SimWindow_Window_Default ;
		simbldg:name 						?Name ;		
		simcore:ifcGlobalID 				?GlobalId ;			
		simcore:refId 						?IfcWindowRefId ;
		simcore:isTemplateObject 			"false"^^xsd:boolean ;
		simcore:objectType 					"Window"^^xsd:string ;
		simcore:simModelSubtype 			"Default"^^xsd:string ;
		simcore:simModelType 				"Window"^^xsd:string ;
		simcore:simUniqueID 				"not defined" ;
		simcore:sourceModelObjectType 		"IfcWindow"^^xsd:string ;
		simcore:sourceModelSchema 			"IFC4"^^xsd:string ;
		simcore:tag 						"not defined" ;
		.
		
	GENERATE {
		?IfcWindow_IRI 		simbldg:materialList 	?IfcMaterialConstituentSet_REF_IRI .
	}
	ITERATOR iter:XPath(?source, "//ifc_uos/IfcRelAssociatesMaterial[RelatedObjects/IfcWindow[@ref='"+?IfcWindow_ID+"']]/RelatingMaterial/IfcMaterialConstituentSet/@ref" ) AS ?IfcMaterialConstituentSet_REF
	WHERE {
		BIND( IRI( CONCAT( ?base, "IfcMaterialConstituentSet_", ?IfcMaterialConstituentSet_REF)) AS ?IfcMaterialConstituentSet_REF_IRI )	
	}.
	
	GENERATE {
		?IfcWindow_IRI 		simbldg:materialList 	?IfcMaterialConstituentSet_ID_IRI .
	}
	ITERATOR iter:XPath(?source, "//ifc_uos/IfcRelAssociatesMaterial[RelatedObjects/IfcWindow[@ref='"+?IfcWindow_ID+"']]/RelatingMaterial/IfcMaterialConstituentSet/@id" ) AS ?IfcMaterialConstituentSet_ID
	WHERE {
		BIND( IRI( CONCAT( ?base, "IfcMaterialConstituentSet_", ?IfcMaterialConstituentSet_ID)) AS ?IfcMaterialConstituentSet_ID_IRI )	
	}.
		
	# OPTIONAL:
	GENERATE 
	{
		?IfcWindow_IRI 
			simcore:containingSpatialStructure 	?IfcBuildingStorey_IRI ;		
			.
	}
	ITERATOR iter:XPath(?source, "//ifc_uos/IfcRelContainedInSpatialStructure[RelatedElements/IfcWindow[@ref='"+?IfcWindow_ID+"']]" ) AS ?IfcRelContainedInSpatialStructure
	WHERE
	{
		BIND( fn:XPath(?IfcRelContainedInSpatialStructure,"/IfcRelContainedInSpatialStructure/RelatingStructure/IfcBuildingStorey/@ref" ) AS ?IfcBuildingStorey_REF )
		BIND( IRI( CONCAT( ?base, "IfcBuildingStorey_",?IfcBuildingStorey_REF ) ) AS ?IfcBuildingStorey_IRI )
	}.
}

SOURCE <http://ex.org/file1> AS ?source
# This name variable is mapped to a file path in a new line that will be 
# included by the program linked to the original file:

ITERATOR iter:XPath(?source, "//ifc_uos/IfcWindow" ) AS ?IfcWindow
WHERE 
{
	# 1. Extract base URI:
	BIND (str(inst:) as ?base)

	# 2. Extract element names:
	BIND( fn:XPath(?IfcWindow,"/IfcWindow/@id" ) AS ?IfcWindow_ID )	
	BIND( fn:XPath(?IfcWindow,"/IfcWindow/Name/text()") AS ?Name )
	BIND( fn:XPath(?IfcWindow,"/IfcWindow/GlobalId/text()") AS ?GlobalId )
	BIND( fn:XPath(?IfcWindow,"/IfcWindow/CompositionType/text()") AS ?CompositionType )
	BIND( fn:XPath(?IfcWindow,"/IfcWindow/ObjectType/text()") AS ?ObjectType )
			
	BIND( IRI( CONCAT( ?base, "IfcWindow_", ?IfcWindow_ID ) ) AS ?IfcWindow_IRI )
	BIND( (xsd:ID(CONCAT("ID", ?IfcWindow_ID))) as ?IfcWindowRefId ) . 
}
