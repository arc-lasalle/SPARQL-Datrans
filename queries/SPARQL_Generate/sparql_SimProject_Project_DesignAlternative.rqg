BASE <http://trans.example.com/>
PREFIX iter: <http://w3id.org/sparql-generate/iter/>
PREFIX fn: <http://w3id.org/sparql-generate/fn/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> 
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
PREFIX simcore: <http://www.opteemal.eu/schema/2017/01/SimModelCore#>
PREFIX simres: <http://www.opteemal.eu/schema/2017/01/ResourcesGeneral#>
PREFIX simbldg: <http://www.opteemal.eu/schema/2017/01/BuildingModel#>
PREFIX list: <https://w3id.org/list#> 
PREFIX inst:  <http://opteemal-project.eu/resource/simmodel#>

# last modification: 2019.07.09

GENERATE 
{
	?IfcProject_IRI
		rdf:type 								simbldg:SimProject_Project_DesignAlternative ;
		simcore:isTemplateObject 				"false"^^xsd:boolean ;
		simcore:objectOwnerHistory   		    ?OwnerHistory_IRI ;
		simcore:simModelType 					"Project"^^xsd:string ;
		simcore:simModelSubtype 				"DesignAlternative"^^xsd:string ;
		simcore:sourceModelSchema 				"IFC4"^^xsd:string ;
		simcore:sourceModelObjectType 			"IfcProject"^^xsd:string ;
		simcore:simModelName 					?Name ;
		simcore:ifcGlobalID 					?GlobalId ;
		simbldg:_3DModelRepresentationContexts 	?IfcGeometricRepresentationContext_IRI ;
		simbldg:projectUnits 					?IfcSIUnit_List_1_IRI ;
		simcore:simUniqueID 					"not defined" ;
		simcore:refId 							?IfcProjectRefId ;
		.
	?OwnerHistory_IRI
        rdf:type 	simres:SimOwnerHistory_Default_Default ;
		.
	GENERATE 
	{
		?IfcSIUnit_List_IRI
			rdf:type 			simbldg:ProjectUnits_List ;
			list:hasContents 	?IfcSIUnit_IRI ;
			list:hasNext 		?IfcSIUnit_List_IRI_NEXT ;
		.		
	}		
	ITERATOR iter:XPath(?source, "//ifc_uos/IfcUnitAssignment[@id='"+?IfcUnitAssignment_REF+"']/Units/IfcSIUnit") AS ?IfcSIUnit ?pos ?hasNext
	WHERE 
	{
		BIND( IRI( CONCAT( ?base, "IfcSIUnit_List_",(?IfcUnitAssignment_REF + "_{str(?pos+1)}")) ) AS ?IfcSIUnit_List_IRI )
		BIND( IRI( CONCAT( ?base, "IfcSIUnit_List_",(?IfcUnitAssignment_REF + "_{str(?pos+2)}")) ) AS ?IfcSIUnit_List_IRI_NEXT_TEMP )
		BIND( IF( ?hasNext, ?IfcSIUnit_List_IRI_NEXT_TEMP , ?undef ) AS ?IfcSIUnit_List_IRI_NEXT ) 		
		BIND( fn:XPath(?IfcSIUnit,"//IfcSIUnit/@ref") AS ?IfcSIUnit_REF )		
		BIND( IRI( CONCAT( ?base, "IfcSIUnit_", ?IfcSIUnit_REF )) AS ?IfcSIUnit_IRI )
	}.		
}

SOURCE <http://ex.org/file1> AS ?source
# This name variable is mapped to a file path in a new line that will be 
# included by the program linked to the original file:

ITERATOR iter:XPath(?source, "//ifc_uos/IfcProject" ) AS ?IfcProject
WHERE 
{
    # 1. Extract base URI:
	BIND (str(inst:) as ?base)
	
	BIND( fn:XPath(?IfcProject,"/IfcProject/@id") AS ?IfcProject_ID )
	
	BIND( fn:XPath(?IfcProject,"/IfcProject/OwnerHistory/IfcOwnerHistory/@ref") AS ?OwnerHistory_REF )
	BIND( IRI( CONCAT( ?base, "OwnerHistory_", ?OwnerHistory_REF )) AS ?OwnerHistory_IRI )
	
	BIND( fn:XPath(?IfcProject,"/IfcProject/Name/text()") AS ?Name )
	BIND( fn:XPath(?IfcProject,"/IfcProject/GlobalId/text()") AS ?GlobalId )
	BIND( fn:XPath(?IfcProject,"/IfcProject/RepresentationContexts/IfcGeometricRepresentationContext/@ref") AS ?IfcGeometricRepresentationContext_REF )
	BIND( IRI( CONCAT( ?base, "IfcGeometricRepresentationContext_", ?IfcGeometricRepresentationContext_REF )) AS ?IfcGeometricRepresentationContext_IRI )
	
	BIND( fn:XPath(?IfcProject,"/IfcProject/UnitsInContext/IfcUnitAssignment/@ref") AS ?IfcUnitAssignment_REF )
	BIND( IRI( CONCAT( ?base, CONCAT("IfcSIUnit_List_", ?IfcUnitAssignment_REF ), "_1")) AS ?IfcSIUnit_List_1_IRI )
	
	BIND( IRI( CONCAT( ?base, "IfcProject_", ?IfcProject_ID )) AS ?IfcProject_IRI )
	
	BIND( (xsd:ID(CONCAT("ID", ?IfcProject_ID))) as ?IfcProjectRefId )
}