BASE <http://trans.example.com/>
PREFIX iter: <http://w3id.org/sparql-generate/iter/>
PREFIX fn: <http://w3id.org/sparql-generate/fn/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> 
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
PREFIX simcore: <http://www.opteemal.eu/schema/2017/01/SimModelCore#>
PREFIX simres: <http://www.opteemal.eu/schema/2017/01/ResourcesGeneral#>
PREFIX inst:  <http://opteemal-project.eu/resource/simmodel#>

# last modification: 2019.07.17

GENERATE 
{
	?IfcSIUnit 
		rdf:type 						simres:SimDerivedUnitType_DerivedUnit_Default ;
		simcore:isTemplateObject 		"false"^^xsd:boolean ;
		simcore:simModelType 			"SiUnit"^^xsd:string ;
		simcore:simModelSubtype 		"Default"^^xsd:string ;
		simcore:sourceModelSchema 		"IFC4"^^xsd:string ;
		simcore:sourceModelObjectType 	"IfcDerivedUnitElement"^^xsd:string ;
		simcore:refId 					?ConversionBasedUnitRefId ;
		.
}

SOURCE <http://ex.org/file1> AS ?source
# This name variable is mapped to a file path in a new line that will be 
# included by the program linked to the original file:

ITERATOR iter:XPath(?source, "//ifc_uos/IfcConversionBasedUnit" ) AS ?IfcConversionBasedUnit
WHERE 
{
    # 1. Extract base URI:
	BIND (str(inst:) as ?base)
	
	# 2. Extract element names:
	BIND( fn:XPath(?IfcConversionBasedUnit,"/IfcConversionBasedUnit/@id" ) AS ?IfcConversionBasedUnit_ID )
	
	# 3. Refine element names:
	BIND( IRI( CONCAT( ?base, "IfcConversionBasedUnit_", ?IfcConversionBasedUnit_ID ) ) AS ?IfcSIUnit )
	BIND( (xsd:ID(CONCAT("ID", ?IfcConversionBasedUnit_ID))) as ?ConversionBasedUnitRefId ) . 
}