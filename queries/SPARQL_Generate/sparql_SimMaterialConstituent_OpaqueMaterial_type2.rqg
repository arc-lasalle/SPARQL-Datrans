BASE <http://trans.example.com/>
PREFIX iter: <http://w3id.org/sparql-generate/iter/>
PREFIX fn: <http://w3id.org/sparql-generate/fn/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> 
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
PREFIX simcore: <http://www.opteemal.eu/schema/2017/01/SimModelCore#>
PREFIX simres: <http://www.opteemal.eu/schema/2017/01/ResourcesGeneral#>
PREFIX inst:  <http://opteemal-project.eu/resource/simmodel#>

# last modification 2019.07.08

GENERATE 
{
	GENERATE 
	{
		GENERATE 
		{
			GENERATE 
			{
				?IfcMaterial_IRI 
					rdf:type 								simres:SimMaterial_OpaqueMaterial_Default ;
					simres:category                			?category ;
					simres:name                    			?MaterialName ;
					simcore:sourceModelSchema 				"IFC4"^^xsd:string ;
					simcore:sourceModelObjectType 			"IfcMaterial"^^xsd:string ;
					simcore:simUniqueID 					"not defined"^^xsd:string ;						
					simcore:isTemplateObject 				"false"^^xsd:boolean ;
					simcore:simModelType 					"OpaqueMaterial"^^xsd:string ;
					simcore:simModelSubtype 				"Default"^^xsd:string ;
					simcore:refId 							?IfcMaterialRefId ;
					.
		
				GENERATE {
					?IfcMaterial_IRI simres:simMaterial_Cond 				?ThermalConductivityValue .
				}
				ITERATOR iter:XPath(?IfcPropertySingleValue, "/IfcPropertySingleValue[@id='"+?IfcPropertySingleValue_REF+"'][Name='ThermalConductivity']") AS ?IfcPropertySingleValue1
				WHERE
				{
					BIND( xsd:double(fn:XPath(?IfcPropertySingleValue1,"/IfcPropertySingleValue/NominalValue/IfcThermalConductivityMeasure-wrapper/text()")) AS ?ThermalConductivityValue )
				}.
				
				GENERATE {
					?IfcMaterial_IRI simres:simMaterial_SpecificHeat		?SpecificHeatCapacityValue .
				}
				ITERATOR iter:XPath(?IfcPropertySingleValue, "/IfcPropertySingleValue[@id='"+?IfcPropertySingleValue_REF+"'][Name='SpecificHeatCapacity']") AS ?IfcPropertySingleValue2
				WHERE
				{
					BIND( xsd:double(fn:XPath(?IfcPropertySingleValue2,"/IfcPropertySingleValue/NominalValue/IfcSpecificHeatCapacityMeasure-wrapper/text()")) AS ?SpecificHeatCapacityValue )
				}.	

				GENERATE {
					?IfcMaterial_IRI simres:simMaterial_Density				?MassDensityValue .
				}
				ITERATOR iter:XPath(?IfcPropertySingleValue, "/IfcPropertySingleValue[@id='"+?IfcPropertySingleValue_REF+"'][Name='MassDensity']") AS ?IfcPropertySingleValue3
				WHERE
				{
					BIND( xsd:double(fn:XPath(?IfcPropertySingleValue3,"/IfcPropertySingleValue/NominalValue/IfcMassDensityMeasure-wrapper/text()")) AS ?MassDensityValue )
				}.
			}				
			ITERATOR iter:XPath(?source, "//ifc_uos/IfcPropertySingleValue[@id='"+?IfcPropertySingleValue_REF+"']") AS ?IfcPropertySingleValue
			WHERE
			{
				FILTER NOT EXISTS { 
					BIND( fn:XPath(?IfcPropertySingleValue,"/IfcPropertySingleValue[Name='Thermal Resistance (R)']/NominalValue/IfcReal-wrapper/text()") AS ?ThermalResistancePropVal )	  
					FILTER (strlen(?ThermalResistancePropVal)>0)
				}
			}.
		}
		ITERATOR iter:XPath(?source, "//ifc_uos/IfcMaterialProperties[Material/IfcMaterial[@ref='"+?IfcMaterial_REF+"']]/Properties//IfcPropertySingleValue/@ref") AS ?IfcPropertySingleValue_REF 
		WHERE { }.
	}
	ITERATOR iter:XPath(?source, "//ifc_uos/IfcMaterial[@id='"+?IfcMaterial_REF+"']" ) AS ?IfcMaterial2
	WHERE
	{	
		BIND( fn:XPath(?IfcMaterial2,"/IfcMaterial/Name/text()" ) AS ?MaterialName )		
		BIND( fn:XPath(?IfcMaterial2,"/IfcMaterial/Category/text()" ) AS ?category )		

		FILTER NOT EXISTS { 
			FILTER (regex(?category, "Glass",   "i") || 
					regex(?category, "Glazing", "i") || 
					regex(?category, "glass",   "i") || 
					regex(?category, "glazing", "i") || 
					regex(?category, "gas",     "i") || 
					regex(?category, "Gas",     "i") 	).
		}
	}.
}

SOURCE <http://ex.org/file1> AS ?source
# This name variable is mapped to a file path in a new line that will be 
# included by the program linked to the original file:

ITERATOR iter:XPath(?source, "//ifc_uos/IfcRelAssociatesMaterial/RelatingMaterial/IfcMaterialConstituentSet/MaterialConstituents/IfcMaterialConstituent/Material/IfcMaterial/@ref" ) AS ?IfcMaterial_REF
WHERE 
{
	# 1. Extract base URI:
	BIND (str(inst:) as ?base)
	BIND( IRI( CONCAT( ?base, "IfcMaterial_", ?IfcMaterial_REF ) ) AS ?IfcMaterial_IRI )
}


