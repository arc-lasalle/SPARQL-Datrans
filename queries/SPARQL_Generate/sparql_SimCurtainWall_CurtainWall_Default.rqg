BASE <http://trans.example.com/>
PREFIX iter: <http://w3id.org/sparql-generate/iter/>
PREFIX fn: <http://w3id.org/sparql-generate/fn/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> 
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
PREFIX simcore: <http://www.opteemal.eu/schema/2017/01/SimModelCore#>
PREFIX simbldg: <http://www.opteemal.eu/schema/2017/01/BuildingModel#>
PREFIX inst:  <http://opteemal-project.eu/resource/simmodel#>

# last modification 2019.07.08

GENERATE 
{
	GENERATE
	{
		GENERATE
		{
			?IfcCurtainWall_IRI
				rdf:type 							simbldg:SimCurtainWall_CurtainWall_Default ;
				simcore:name 						?Name ;			
				simcore:containingSpatialStructure	?IfcBuildingStorey_IRI ;
				simcore:ifcGlobalID 				?globalId ;
				simcore:isTemplateObject 			"false"^^xsd:boolean ;				
				simbldg:curtainWallIsExternal  		true ;			
				simcore:objectType             		"CurtainWall" ;				
				simcore:simModelSubtype 			"Default"^^xsd:string ;		
				simcore:simModelType 				"CurtainWall"^^xsd:string ;
				simcore:simUniqueID 				"not defined" ;
				simcore:sourceModelObjectType 		"IfcCurtainWall"^^xsd:string ;
				simcore:sourceModelSchema 			"IFC4" ;
				simcore:refId 						?CurtainWallRefId ;
				simcore:tag 						?tag ;
				.
			
			# BUILDING STOREY
			GENERATE { 	
				?IfcCurtainWall_IRI 	simcore:containingSpatialStructure	?IfcBuildingStorey_IRI ;
			}	
			ITERATOR iter:XPath(?source, "//ifc_uos/IfcRelContainedInSpatialStructure[RelatedElements/IfcCurtainWall[@ref='"+?IfcCurtainWall_ID+"']]/RelatingStructure/IfcBuildingStorey/@ref" ) AS ?IfcBuildingStorey_REF 
			WHERE
			{
				BIND( IRI( CONCAT( ?base, "IfcBuildingStorey_",?IfcBuildingStorey_REF ) ) AS ?IfcBuildingStorey_IRI )
			}.

			# AREA
			GENERATE {
				?IfcCurtainWall_IRI		simbldg:grossSideArea				?area ;
			}
			ITERATOR iter:XPath(?source, "//ifc_uos/IfcPropertySingleValue[@id='"+?IfcPropertySingleValue_REF+"'][Name = 'Area']/NominalValue/IfcAreaMeasure-wrapper/text()" ) AS ?Area_TEMP 
			WHERE {	
				BIND( xsd:double(?Area_TEMP) AS ?Area )
			}.
		}	
		ITERATOR iter:XPath(?source, "//ifc_uos/IfcPropertySet[@id='"+?IfcPropertySet_REF+"']/HasProperties/IfcPropertySingleValue/@ref" ) AS ?IfcPropertySingleValue_REF   
		WHERE { }.
	}	
	ITERATOR iter:XPath(?source, "//ifc_uos/IfcRelDefinesByProperties[RelatedObjects/IfcCurtainWall[@ref='"+?IfcCurtainWall_ID+"']]/RelatingPropertyDefinition/IfcPropertySet/@ref" ) AS ?IfcPropertySet_REF 
	WHERE { }.
}

SOURCE <http://ex.org/file1> AS ?source
# This name variable is mapped to a file path in a new line that will be 
# included by the program linked to the original file:

ITERATOR iter:XPath(?source, "//ifc_uos/IfcCurtainWall" ) AS ?IfcCurtainWall
WHERE 
{
	# 1. Extract base URI:
	BIND (str(inst:) as ?base)

	# 2. Extract element names:
	BIND( fn:XPath(?IfcCurtainWall,"/IfcCurtainWall/@id" ) AS ?IfcCurtainWall_ID )	
	BIND( fn:XPath(?IfcCurtainWall,"/IfcCurtainWall/GlobalId/text()") AS ?globalId )
	BIND( fn:XPath(?IfcCurtainWall,"/IfcCurtainWall/Name/text()") AS ?Name )	
	BIND( fn:XPath(?IfcCurtainWall,"/IfcCurtainWall/Tag/text()") AS ?tag )	
	
	BIND( IRI( CONCAT( ?base, "IfcCurtainWall_", ?IfcCurtainWall_ID ) ) AS ?IfcCurtainWall_IRI )
	BIND( (xsd:ID(CONCAT("ID", ?IfcCurtainWall_ID))) as ?CurtainWallRefId ) . 
}





