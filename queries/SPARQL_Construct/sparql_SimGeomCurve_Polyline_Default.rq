# IMPORTANT: use "ifc" allways as a prefix name for all of IFC instances and do not add any prefix URI for them.
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX rdf:	<http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX list: <https://w3id.org/list#>
PREFIX simcore: <http://www.opteemal.eu/schema/2017/01/SimModelCore#>
PREFIX simgeom: <http://www.opteemal.eu/schema/2017/01/ResourcesGeometry#>

# last modification: 2017.09.08

CONSTRUCT
{
	?IfcPolyline 
		rdf:type 							simgeom:SimGeomCurve_Polyline_Default ;
		simcore:simModelType 				"Polyline"^^xsd:string ;
		simcore:simModelSubtype 			"Default"^^xsd:string ;
		simcore:isTemplateObject 			"false"^^xsd:boolean ;
		simgeom:points 						?IfcCartesianPoint_List ;
		simcore:refId 						?SimGeomCurve_Polyline_Default_RefId ;
		simcore:simUniqueID 				"not defined" ;
		simcore:sourceModelObjectType  		"IfcPolyline" ;
		simcore:sourceModelSchema 			"IFC4" ;
		.
	?IfcCartesianPoint_List_Next 	
		rdf:type 							simgeom:Points_List ;
		list:hasContents 					?IfcCartesianPoint ;
		list:hasNext 						?IfcCartesianPoint_Tail ;
		.	
	?IfcCartesianPoint 
		rdf:type 							simgeom:SimGeomPoint_Point_CartesianPoint ;
		simcore:simModelType 				"Point"^^xsd:string ;
		simcore:simModelSubtype 			"CartesianPoint"^^xsd:string ;
		simcore:isTemplateObject 			"false"^^xsd:boolean ;
		simcore:sourceModelObjectType 		"IfcCartesianPoint" ;
		simcore:sourceModelSchema 			"IFC4" ;
		simcore:simUniqueID 				"not defined" ;
		simgeom:coordinates_MeasureValue 	?IfcLengthMeasureNode_List ;
		simcore:refId 						?SimGeomPoint_Point_CartesianPoint_RefId ;
		.	
	?IfcLengthMeasureNode_List_Next 
		rdf:type 							simcore:DoubleList ;
		list:hasContents 					?IfcLengthMeasureValue ;
		list:hasNext 						?IfcLengthMeasureNode_List_Last ;
		.	
}
WHERE 
{
	?IfcPolyline 
		rdf:type 				ifc:IfcPolyline ;
		ifc:points_IfcPolyline 	?IfcCartesianPoint_List ;
		.	
	
	# SimGeomCurve_Polyline_Default RefID:
	bind( (xsd:ID(CONCAT("ID", strafter( xsd:string(?IfcPolyline), "IfcPolyline_" )))) as ?SimGeomCurve_Polyline_Default_RefId ) . 
	
	?IfcCartesianPoint_List
		list:hasNext*						?IfcCartesianPoint_List_Next ;
		.
	?IfcCartesianPoint_List_Next
		list:hasContents					?IfcCartesianPoint ;
		.
	OPTIONAL {
		?IfcCartesianPoint_List_Next
			list:hasNext					?IfcCartesianPoint_Tail ;
			.
	}
	
	?IfcCartesianPoint
        ifc:coordinates_IfcCartesianPoint 	?IfcLengthMeasureNode_List ;
		.	
	?IfcLengthMeasureNode_List		
		list:hasNext*						?IfcLengthMeasureNode_List_Next ;
		.
	?IfcLengthMeasureNode_List_Next								
		list:hasContents					?IfcLengthMeasure ;					
		.
	OPTIONAL {	
		?IfcLengthMeasureNode_List_Next
			list:hasNext					?IfcLengthMeasureNode_List_Last ;		
			.
	}
	?IfcLengthMeasure
		express:hasDouble  					?IfcLengthMeasureValue ;
		.				
	
	# SimGeomPoint_Point_CartesianPoint RefID:
	bind( (xsd:ID(CONCAT("ID", strafter( xsd:string(?IfcCartesianPoint), "IfcCartesianPoint_" )))) as ?SimGeomPoint_Point_CartesianPoint_RefId ) . 
	
	# ID of SimModel_ID1 (get the instance base URI + SimModel_ID1)
	bind( URI(CONCAT(STRBEFORE( xsd:string(?IfcPolyline), "IfcPolyline_" ), "SimModel_ID1")) as ?SimModel_ID1 ) .
}